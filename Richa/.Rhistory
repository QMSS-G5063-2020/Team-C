mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity") +
xlab(NULL) + ylab("migration per population")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity") +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Extract top 3 and least 3 countries for labels
mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
(top3 <- head(n = 3))
# Extract top 3 and least 3 countries for labels
mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
head(n = 3)
# Extract top 3 and least 3 countries for labels
top3 <-  mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
head(n = 3) %>%
select(country)
View(top3)
least3 <- mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
tail(n = 3) %>%
select(country)
View(least3)
least3 <- mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
tail(n = 4) %>%
select(country)
least4 <- mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
tail(n = 4) %>%
select(country, mig_by_pop)
# Extract top 3 and least 3 countries for labels
top3 <-  mig_pop %>%
filter(date == 2017 & !is.na(mig_by_pop)) %>%
arrange(desc(mig_by_pop)) %>%
head(n = 3) %>%
select(country, mig_by_pop)
View(top3)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_point(data = top3, aes(x = country, y = mig_by_pop), color = "red")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_point(data = top3, aes(x = country, y = mig_by_pop), color = "green") +
geom_point(data = least4, aes(x = country, y = mig_by_pop), color = "red")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop), color = "green") +
geom_point(data = least4, aes(x = country, y = mig_by_pop), color = "red")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green") +
geom_point(data = least4, aes(x = country, y = mig_by_pop), color = "red")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE) +
geom_point(data = least4, aes(x = country, y = mig_by_pop), color = "red")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0) +
geom_point(data = least4, aes(x = country, y = mig_by_pop), color = "red")
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0, nudge_y = 0.5) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0, nudge_y = -0.02)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0, nudge_y = -0.01)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per population") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0, nudge_y = 0.01) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0, nudge_y = -0.01)
mig_pop %>%
filter(date == 2017) %>%
ggplot() +
geom_bar(aes(y = mig_by_pop, x = country), stat = "identity", na.rm = TRUE) +
xlab(NULL) + ylab("migration per person in the country") +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
geom_text(data = top3, aes(x = country, y = mig_by_pop, label = country), color = "green", check_overlap = TRUE, vjust = 0, nudge_y = 0.01) +
geom_text(data = least4, aes(x = country, y = mig_by_pop, label = country), color = "red", check_overlap = TRUE, vjust = 0, nudge_y = -0.01)
View(least4)
library(wbstats)
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.MKTP.CD") , startdate = 1900, enddate = 2017)
View(gdp_data)
gdp_data$date <- as.numeric(gdp_data$date)
str(gdp_data)
library(ggplot2)
gdp_data %>%
ggplot() +
geom_line(aes(x = year, y = value))
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value))
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.MKTP.CD") , startdate = 1980, enddate = 2017)
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.MKTP.CD") , startdate = 1980, enddate = 2017)
gdp_data$date <- as.numeric(gdp_data$date)
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value))
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.PCAP.CD") , startdate = 1980, enddate = 2017)
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.PCAP.CD") , startdate = 1980, enddate = 2017)
gdp_data$date <- as.numeric(gdp_data$date)
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value))
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.PCAP.CD") , startdate = 2000, enddate = 2017)
gdp_data$date <- as.numeric(gdp_data$date)
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value))
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value)) +
scale_x_continuous()
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value)) + ylab("GDP per capita") +
scale_x_continuous(labels = as.character(date), breaks = date)
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value)) + ylab("GDP per capita") +
scale_x_continuous(breaks = date)
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value)) + ylab("GDP per capita") +
scale_x_continuous(breaks = date)
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value)) + ylab("GDP per capita")
gdp_data %>%
ggplot() +
geom_line(aes(x = date, y = value)) + ylab("GDP per capita")
gdp_data %>%
ggplot() +
geom_line(aes(x = factor(date), y = value)) + ylab("GDP per capita")
gdp_data %>%
ggplot(aes(x = factor(date), y = value)) +
geom_line() + ylab("GDP per capita")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita")
gdp_data <- wb(country = "VEN",
indicator = c("NY.GDP.PCAP.KD.ZG") , startdate = 2000, enddate = 2017)
gdp_data$date <- as.numeric(gdp_data$date)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red")
?geom_segment
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 2013, y = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(xend = 2013, yend = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(y = 2013, xend = 2013, yend = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 2013, xend = 2013, yend = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 10, xend = 10, yend = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, yend = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, y = 0, yend = 10), color = "blue")
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, y = 0, yend = 10), color = "blue", size = 0.2)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez \n dies."),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=3)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.2, xend = 14.2, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5) +
geom_segment(aes(x = 15, xend = 15, y = 0, yend = -7), color = "blue", size = 0.2) +
geom_text(aes(x=15, y=-5, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5) +
geom_segment(aes(x = 15, xend = 15, y = 0, yend = -7), color = "blue", size = 0.2) +
geom_text(aes(x=15, y=-10, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5) +
geom_segment(aes(x = 15, xend = 15, y = 0, yend = -7), color = "blue", size = 0.2) +
geom_text(aes(x=14, y=-8, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2) +
geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5) +
geom_segment(aes(x = 15, xend = 15, y = 0, yend = -7), color = "blue", size = 0.2) +
geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
# Load geosphere
library(geosphere)
# Background map
map('world',
col="#f2f2f2", fill=TRUE, bg="white", lwd=0.05,
mar=rep(0,4),border=0, ylim=c(-80,80)
)
# World map is available in the maps package
library(maps)
# No margin
par(mar=c(0,0,0,0))
# World map
map('world',
col="#f2f2f2", fill=TRUE, bg="white", lwd=0.05,
mar=rep(0,4),border=0, ylim=c(-80,80)
)
# Dplyr for data wrangling and pipe function
library(dplyr)
# Cities
Buenos_aires <- c(-58,-34)
Paris <- c(2,49)
Melbourne <- c(145,-38)
# Data frame
data <- rbind(Buenos_aires, Paris, Melbourne) %>%
as.data.frame()
colnames(data) <- c("long","lat")
# Show the cities on the map
map('world',
col="#f2f2f2", fill=TRUE, bg="white", lwd=0.05,
mar=rep(0,4),border=0, ylim=c(-80,80)
)
points(x=data$long, y=data$lat, col="slateblue", cex=3, pch=20)
# Load geosphere
library(geosphere)
# Background map
map('world',
col="#f2f2f2", fill=TRUE, bg="white", lwd=0.05,
mar=rep(0,4),border=0, ylim=c(-80,80)
)
# Dot for cities
points(x=data$long, y=data$lat, col="slateblue", cex=3, pch=20)
# Compute the connection between Buenos Aires and Paris
inter <- gcIntermediate(Paris,  Buenos_aires, n=50, addStartEnd=TRUE, breakAtDateLine=F)
# Show this connection
lines(inter, col="slateblue", lwd=2)
# Between Paris and Melbourne
inter <- gcIntermediate(Melbourne,  Paris, n=50, addStartEnd=TRUE, breakAtDateLine=F)
lines(inter, col="slateblue", lwd=2)
gdp_data <- wb(country = "SSD",
indicator = c("NY.GDP.PCAP.KD.ZG") , startdate = 2000, enddate = 2017)
library(wbstats)
library(ggplot2)
gdp_data <- wb(country = "SSD",
indicator = c("NY.GDP.PCAP.KD.ZG") , startdate = 2000, enddate = 2017)
gdp_data$date <- as.numeric(gdp_data$date)
View(gdp_data)
str(gdp_data)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red")
library(tidyverse)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red")
#geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2) +
#geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5) +
#geom_segment(aes(x = 15, xend = 15, y = 0, yend = -7), color = "blue", size = 0.2) +
#geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 3.5, xend = 3.5, y = 0, yend = -30), color = "blue", size = 0.2) +
geom_text(aes(x=3.5, y=-30, label="Gain independence"),size=2.5)
#geom_segment(aes(x = 3.5, xend = 23, y = 0, yend = -7), color = "blue", size = 0.2) +
#geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 3.5, xend = 3.5, y = 0, yend = -40), color = "blue", size = 0.2) +
geom_text(aes(x=3.5, y=-40, label="Gain independence"),size=2.5)
#geom_segment(aes(x = 3.5, xend = 23, y = 0, yend = -7), color = "blue", size = 0.2) +
#geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 3.5, xend = 3.5, y = 0, yend = -40), color = "blue", size = 0.2) +
geom_text(aes(x=3.5, y=-40, label="Gain \n independence"),size=2.5)
#geom_segment(aes(x = 3.5, xend = 23, y = 0, yend = -7), color = "blue", size = 0.2) +
#geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 3.5, xend = 3.5, y = 0, yend = -40), color = "blue", size = 0.2) +
geom_text(aes(x=3.5, y=-45, label="Gain \n independence"),size=2.5)
#geom_segment(aes(x = 3.5, xend = 23, y = 0, yend = -7), color = "blue", size = 0.2) +
#geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red") +
geom_segment(aes(x = 3.5, xend = 3.5, y = 0, yend = -40), color = "blue", size = 0.2) +
geom_text(aes(x=3.5, y=-42, label="Gain \n independence"),size=2.5)
#geom_segment(aes(x = 3.5, xend = 23, y = 0, yend = -7), color = "blue", size = 0.2) +
#geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
library(wbstats)
library(ggplot2)
library(tidyverse)
gdp_data <- wb(country = "SYR",
indicator = c("NY.GDP.PCAP.KD.ZG") , startdate = 2000, enddate = 2017)
gdp_data$date <- as.numeric(gdp_data$date)
gdp_data %>%
ggplot(aes(x = factor(date), y = value, group = 1)) +
geom_line(group = 1) + ylab("GDP per capita growth") +xlab(NULL) +
geom_hline(yintercept = 0, color = "red")
# geom_segment(aes(x = 14.1, xend = 14.1, y = 0, yend = 10), color = "blue", size = 0.2)
# geom_text(aes(x=14.2, y=10, label="President Chavez dies."),size=2.5) +
# geom_segment(aes(x = 15, xend = 15, y = 0, yend = -7), color = "blue", size = 0.2) +
# geom_text(aes(x=14.5, y=-8, label="Central Bank\n confirms recession"),size=2.5)
library(readxl)
?read_excel
mig_trend <- read_excel("Data/migration_trends.xlsx", sheet = 2, skip = 1)
View(mig_trend)
str(mig_trend)
mig_trend <- read_excel("Data/migration_trends.xlsx", sheet = 2, skip = 1)
mig_trend <- read_excel("Data/migration_trends.xlsx", sheet = 2, skip = 1)
View(mig_trend)
mig_trend <- read_excel("Data/migration_trends.xlsx", sheet = 2, skip = 1)
mig_trend <- read_excel("Data/migration_trends.xlsx", sheet = 2, col_names = TRUE)
mig_trend
mig_trend <- t(mig_trend)
View(mig_trend)
row.names(mig_trend)
mig_trend$type <- row.names(mig_trend)
mig_trend
View(mig_trend)
mig_trend <- read_excel("Data/migration_trends.xlsx", sheet = 2, col_names = TRUE)
?gather
gather(mig_trend, key = "year", value = c("2010", "2015", "2017"))
gather(mig_trend, key = "year", value = ("2010", "2015", "2017"))
gather(mig_trend, key = "year", value = c("2010", "2015", "2017"))
gather(mig_trend, key = "year", value = c(2010, 2015, 2017))
